<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans classpath:org/springframework/beans/factory/xml/spring-beans-2.5.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
    http://www.springframework.org/schema/context classpath:org/springframework/context/config/spring-context-2.5.xsd">

    <!-- the TCP server -->
    <bean id="networkServer" class= "com.flipkart.phantom.runtime.impl.server.netty.TCPNettyServer">
        <property name="portNumber" value="8080"/>
        <property name="defaultChannelGroup" ref="defaultChannelGroup"/>
        <property name="pipelineFactory" ref="commandChannelPipelineFactory"/>
        <property name="bootstrapOptions">
            <map>
                <entry key="child.tcpNoDelay" value="true"/>
                <entry key="child.keepAlive" value="true"/>
            </map>
        </property>
    </bean>

    <!--  ChannelHandlerPipelineFactory for TCP Server -->
    <bean id="commandChannelPipelineFactory" class="com.flipkart.phantom.runtime.impl.server.netty.ChannelHandlerPipelineFactory">
        <property name="channelHandlerBeanNamesMap">
            <map>
                <entry key="commandBufferDecoder" value="commandBufferDecoder"/>
                <entry key="commandHandler" value="commandProcessingChannelHandler"/>
            </map>
        </property>
    </bean>

    <!-- Prototype scope command ChannelHandler beans. All channel handler beans MUST be of prototype bean scope-->
    <bean id="commandBufferDecoder" class="com.flipkart.phantom.runtime.impl.server.netty.decoder.command.CommandBufferDecoder" scope="prototype"/>
    <bean id="commandProcessingChannelHandler" class="com.flipkart.phantom.runtime.impl.server.netty.handler.command.CommandProcessingChannelHandler" scope="prototype">
        <property name="defaultChannelGroup" ref="defaultChannelGroup"/>
        <property name="repository" ref="taskHandlerRepository"/>
        <property name="eventProducer" ref="serviceProxyEventProducer"/>
        <property name="eventDispatchingSpanCollector" ref="eventDispatchingSpanCollector"/>
        <property name="traceFilter">
            <bean class="com.github.kristofa.brave.FixedSampleRateTraceFilter">
				<constructor-arg index="0" value="1"/>                
            </bean>
        </property>        
    </bean>
    
    <!-- Task Handler Event Publishers & Consumers-->
    <bean id="applicationEventMulticaster" class="org.trpr.platform.core.impl.event.PlatformEventMulticaster">
        <property name="subscriptions">
            <list>
                <value>evt://com.flipkart.phantom.events.COMMAND_HANDLER</value>
                <value>evt://com.flipkart.phantom.events.THRIFT_HANDLER</value>
                <value>evt://com.flipkart.phantom.events.HTTP_HANDLER</value>
                <value>evt://com.flipkart.phantom.events.ASYNC_COMMAND_HANDLER</value>
                <value>evt://com.flipkart.phantom.events.TRACING_COLLECTOR</value>
            </list>
        </property>
    </bean>

    <!--This event producer bean is declared primarily for using in ServiceProxyEvent Producer-->
    <bean id="endpointEventProducer" class="org.trpr.platform.core.impl.event.EndpointEventProducerImpl">
        <property name="defaultEndpointURI" value="evt://com.flipkart.phantom.events.ALL"/>
    </bean>

    <!--This event producer bean is declared primarily for publishing Service Proxy Events-->
    <bean id="serviceProxyEventProducer" class="com.flipkart.phantom.event.ServiceProxyEventProducer">
        <!--Current implementation publishes events to endpoints based on Handlers. Nothing is published to ALL-->
        <property name="eventProducer" ref="endpointEventProducer"/>
    </bean>

    <!--This bean corresponds to consumer of Service Proxy Events which listens to all event types and logs errors-->
    <bean id="errorRequestLogger" class="com.flipkart.phantom.event.consumer.RequestLogger">
        <property name="subscriptions">
            <list>
                <value>evt://com.flipkart.phantom.events.COMMAND_HANDLER</value>
                <value>evt://com.flipkart.phantom.events.THRIFT_HANDLER</value>
                <value>evt://com.flipkart.phantom.events.HTTP_HANDLER</value>
                <value>evt://com.flipkart.phantom.events.ASYNC_COMMAND_HANDLER</value>
                <value>evt://com.flipkart.phantom.events.TRACING_COLLECTOR</value>
            </list>
        </property>
    </bean>
    <!-- Enable this bean only when distributed tracing is needed
    <bean id="zipkinCollector" class="com.flipkart.phantom.event.consumer.PushToZipkinEventConsumer">
        <property name="requestLogger" ref="commonRequestLogger"/>
        <property name="zipkinSpanCollector">
            <bean class="com.github.kristofa.brave.zipkin.ZipkinSpanCollector">
				<constructor-arg index="0" value="localhost"/>
      			<constructor-arg index="1" value="9410"/>                
            </bean>
        </property>
        <property name="subscriptions">
            <list>
                <value>evt://com.flipkart.phantom.events.TRACING_COLLECTOR</value>
            </list>
        </property>
    </bean>
    -->
    <!-- Task Handler Event Publishers & Consumers-->
    

</beans>
